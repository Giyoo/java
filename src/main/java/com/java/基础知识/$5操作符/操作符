操作符
1.算数运算符
基本：
+ ：加法 - 相加运算符两侧的值
-  ：减法 - 左操作数减去右操作数
*  ：乘法 - 相乘操作符两侧的值
、：除法 - 左操作数除以右操作数
%：取模 - 左操作数除以右操作数的余数
++ ：自增: 操作数的值增加1
-- ：自减: 操作数的值减少1
注意点：
  1、数字精度
       所谓数字精度，也就是系统在做数字之间的算术运算时，为了尽最大可能地保持计算机的准确性，而自动进行相应的转换，将不同的数据类型转变为精度最高的数据类型。规则如下：
      1）当使用运算符把两个操作数结合到一起时，在进行运算前两个操作数会转化成相同的类型。
      2）两个操作数中有一个是double类型的，则另一个将转换成double型。
      3）两个操作数中有一个是float类型的，则另一个将也转换成float型。
      4）两个操作数中有一个是long类型的，则另一个将也转换成long型。
      5）任何其它类型的操作，两个操作数都要转换成int类型。
 2、整数型运算（int型）
       对于int型的相关操作，加、减、乘的结果都是非常容易理解的，重点讲一下除（/）的运算。
       两个整数相除的结果是整数，这一点与数学中是不同的，在Java中，两个整数相除的结果类似于数学中的求模运算。整除的余数是用%表示，例如15 / 2 = 7，而不是7.5，15 % 2 = 1
 3、自增和自减运算符
        在循环与控制中，我们经常会用到类似于计数器的运算，它们的特征是每次的操作都是加1或减1。在Java中提供了自增、自减运算符，X++使变量X的当前值每次增加1，而X--是自减运算符，每次操作使当前X的值减1
注意：
int i = 10;
i = i++;
流程问题
https://zhuanlan.zhihu.com/p/40645506
2.关系操作符
==：检查如果两个操作数的值是否相等，如果相等则条件为真。

！=：检查如果两个操作数的值是否相等，如果值不相等则条件为真。

>:检查左操作数的值是否大于右操作数的值，如果是那么条件为真。

<:	检查左操作数的值是否小于右操作数的值，如果是那么条件为真。

>=:检查左操作数的值是否大于或等于右操作数的值，如果是那么条件为真。

<=:检查左操作数的值是否小于或等于右操作数的值，如果是那么条件为真。
3.逻辑运算符
Java定义了位运算符，应用于整数类型(int)，长整型(long)，短整型(short)，字符型(char)，和字节型(byte)等类型。
位运算符作用在所有的位上，并且按位运算。

＆:	如果相对应位都是1，则结果为1，否则为0
|   :如果相对应位都是0，则结果为0，否则为1
^ :如果相对应位值相同，则结果为0，否则为1
〜:按位补运算符翻转操作数的每一位，即0变成1，1变成0。
<<:按位左移运算符。左操作数按位左移右操作数指定的位数。
>>:按位右移运算符。左操作数按位右移右操作数指定的位数。
>>>:按位右移补零操作符。左操作数的值按右操作数指定的位数右移，移动得到的空位以零填充。
注意：移位运算符
https://zhuanlan.zhihu.com/p/30108890

两个int变量不通过第三个变量互换值：
int a = 3;
int b = 4;
a=a^b;
b=a^b
a=a^b

4.逻辑运算符
&&：	称为逻辑与运算符。当且仅当两个操作数都为真，条件才为真。
| |：称为逻辑或操作符。如果任何两个操作数任何一个为真，条件为真。
！：称为逻辑非运算符。用来反转操作数的逻辑状态。如果条件为true，则逻辑非运算符将得到false。

短路逻辑运算符
&&和&的区别：
当使用与逻辑运算符时，在两个操作数都为true时，结果才为true，但是当得到第一个操作为false时，其结果就必定是false，这时候就不会再判断第二个操作了
也就是说&会把两边的值都运算出来之后再做运算的出结果，而&&如果左边为假，那么不算右边直接结果为假
||同理

5.赋值运算符
=：简单的赋值运算符，将右操作数的值赋给左侧操作数
+ =：加和赋值操作符，它把左操作数和右操作数相加赋值给左操作数
- =：减和赋值操作符，它把左操作数和右操作数相减赋值给左操作数
* =：乘和赋值操作符，它把左操作数和右操作数相乘赋值给左操作数
/ =：除和赋值操作符，它把左操作数和右操作数相除赋值给左操作数
（％）=：取模和赋值操作符，它把左操作数和右操作数取模后赋值给左操作数
<< =：左移位赋值运算符
>> =：右移位赋值运算符
＆=：按位与赋值运算符
^ =：按位异或赋值操作符
| =：按位或赋值操作符
https://blog.csdn.net/qq_26954773/article/details/68957816
https://blog.csdn.net/qq_26954773/article/details/68957816
byte b = 3+1
byte b1 = 3
byte b2 = 1
b = b1+b2
报错：b1，b2为变量byte相加问题
byte short运算时会自动转换成int类型，java机制如此规定的，因为byte short很容易溢出，所以先转换成int然后进行运算，所以b=b1+b2会报错
而b = 3+1因为3和1是常量，所以先算3+1的值，然后在赋给b,因为常量4在byte的范围内，所以不报错

6.三元运算符
条件运算符也被称为三元运算符。该运算符有3个操作数，并且需要判断布尔表达式的值。该运算符的主要是决定哪个值应该赋值给变量。

variable x = (expression) ? value if true : value if false