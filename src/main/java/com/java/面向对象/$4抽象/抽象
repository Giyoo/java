1.介绍
在面向对象的概念中，我们知道所有的对象都是通过类来描绘的，但是并不是所有的类都是用来描绘对象的，如果一个类中没有包含足够的信息来描绘一个具体的对象，这样的类就是抽象类。抽象类往往用来表征我们在对问题领域进行分析、 设计中得出的抽象概念，是对一系列看上去不同，但是本质上相同的具体概念的抽象，我们不能把它们实例化（拿不出一个具体的东西）所以称之为抽象。

2.抽象方法
被abstract修饰的方法是抽象方法，抽象方法没有方法体。修饰符 abstract 返回值类型 函数名();抽象方法的修饰符只能用public或者protected或者没有修饰，不能被final，static，private修饰。
（1）、类即使不包含抽象方法，也可以定义成抽象类。
（2）、类中含有抽象方法的类一定要定义成抽象类。
（3）、抽象类中字段的定义和子类的访问与一般类没有变化。
（4）、扩展抽象类有两种方法，第一种是在子类中定义部分抽象方法或者抽象方法不定义，这样子类也必须定义成抽象类，第二种是定义全部的抽象方法，这样子类就可以不定义成抽象的了。
（5）、抽象类不能被实例化，但是可以定义一个抽象类的对象变量，这个变量可以引用非抽象子类的对象。
（6）、抽象类中包含有构造方法，也可以显式书写构造方法，构造方法在实例化子类的对象中调用。

3.接口与抽象类
1、接口可以多实现，而抽象类只能单继承
2、抽象类可以有非抽象的方法和构造方法、变量，但是接口只能有抽象方法，静态常量。
3、抽象类和子类具有父子关系，子类能拥有父类中一些属性。接口虽然某个类实现一个接口，但是由于接口中的变量都为静态常量，不存在继承关系。
相同点：
1、无论接口还是抽象类，都无法直接实例化，其自身实例化需要靠实现类或子类来实现。
2、接口和抽象类都必须实现其中的所有方法的区别
不同点：。